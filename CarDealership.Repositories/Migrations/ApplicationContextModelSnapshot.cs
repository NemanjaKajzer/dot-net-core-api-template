// <auto-generated />
using System;
using CarDealership.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Repositories.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CarDealership.Model.Entities.Ad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Ad");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e11fe273-9f25-4068-9ff5-78dcb1e23c67"),
                            CarId = new Guid("391ccb12-9a6a-446b-be49-7c99cf73252f"),
                            Currency = 1,
                            Description = "Lorem ipsum",
                            Price = 20000
                        });
                });

            modelBuilder.Entity("CarDealership.Model.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<int>("Doors")
                        .HasColumnType("integer");

                    b.Property<int>("EngineVolume")
                        .HasColumnType("integer");

                    b.Property<int>("Kilometers")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ProductionYear")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Seats")
                        .HasColumnType("integer");

                    b.Property<int>("TransmissionType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("391ccb12-9a6a-446b-be49-7c99cf73252f"),
                            Brand = "BMW",
                            Doors = 5,
                            EngineVolume = 1999,
                            Kilometers = 100000,
                            Model = "520",
                            Power = 150,
                            ProductionYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Seats = 5,
                            TransmissionType = 1
                        },
                        new
                        {
                            Id = new Guid("e11512b9-fb83-489b-97d0-021be88f0858"),
                            Brand = "Audi",
                            Doors = 5,
                            EngineVolume = 1800,
                            Kilometers = 90000,
                            Model = "Q3",
                            Power = 170,
                            ProductionYear = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Seats = 5,
                            TransmissionType = 0
                        });
                });

            modelBuilder.Entity("CarDealership.Model.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            Id = new Guid("014a8cf3-cb5c-44e3-be4e-4ed6931310b8"),
                            Description = "New customer",
                            Type = 1,
                            Value = 100
                        },
                        new
                        {
                            Id = new Guid("6574ae8c-9e6b-4f35-8609-66ebac9af0c0"),
                            Description = "Returning customer",
                            Type = 2,
                            Value = 5
                        },
                        new
                        {
                            Id = new Guid("df705470-835b-4cb1-b28a-90e0cce7dc81"),
                            Description = "Black Friday",
                            Type = 3,
                            Value = 10
                        },
                        new
                        {
                            Id = new Guid("9b3bc5e0-3f39-49bf-b41b-7435320a78d2"),
                            Description = "No Discount",
                            Type = 0,
                            Value = 1
                        });
                });

            modelBuilder.Entity("CarDealership.Model.Entities.Seller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Seller");

                    b.HasData(
                        new
                        {
                            Id = new Guid("796fb30c-e1a3-4698-be52-f23b615823c5"),
                            Email = "john.smith@js.com",
                            Name = "John",
                            Surname = "Smith"
                        });
                });

            modelBuilder.Entity("CarDealership.Model.Entities.Ad", b =>
                {
                    b.HasOne("CarDealership.Model.Entities.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
